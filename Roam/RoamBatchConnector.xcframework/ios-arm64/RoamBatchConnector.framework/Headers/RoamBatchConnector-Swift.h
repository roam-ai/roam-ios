#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef ROAMBATCHCONNECTOR_SWIFT_H
#define ROAMBATCHCONNECTOR_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RoamBatchConnector",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("BatchLocationModel")
@interface BatchLocationModel : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSString;
@class NSData;

@interface BatchLocationModel (SWIFT_EXTENSION(RoamBatchConnector))
@property (nonatomic, copy) NSString * _Nullable activity;
@property (nonatomic) double altitude;
@property (nonatomic, copy) NSString * _Nullable app_context;
@property (nonatomic, copy) NSString * _Nullable app_details;
@property (nonatomic, copy) NSString * _Nullable app_id;
@property (nonatomic, copy) NSString * _Nullable app_installation_date;
@property (nonatomic, copy) NSString * _Nullable app_name;
@property (nonatomic, copy) NSString * _Nullable app_version;
@property (nonatomic) int16_t battery_remaining;
@property (nonatomic) BOOL battery_saver;
@property (nonatomic, copy) NSString * _Nullable battery_status;
@property (nonatomic, copy) NSString * _Nullable bundle_id;
@property (nonatomic, copy) NSString * _Nullable carrier_name;
@property (nonatomic, copy) NSData * _Nullable centroid;
@property (nonatomic) double course;
@property (nonatomic, copy) NSString * _Nullable device_manufacturer;
@property (nonatomic, copy) NSString * _Nullable device_model;
@property (nonatomic, copy) NSString * _Nullable device_name;
@property (nonatomic) BOOL event_listener;
@property (nonatomic) BOOL geofence_events;
@property (nonatomic) BOOL gps_status;
@property (nonatomic) double horizontal_accuracy;
@property (nonatomic, copy) NSString * _Nullable idfa;
@property (nonatomic, copy) NSString * _Nullable idfv;
@property (nonatomic, copy) NSString * _Nullable ip_address;
@property (nonatomic, copy) NSString * _Nullable kernel_version;
@property (nonatomic) double latitude;
@property (nonatomic, copy) NSString * _Nullable locale_country;
@property (nonatomic, copy) NSString * _Nullable locale_language;
@property (nonatomic) int16_t location_authorization_status;
@property (nonatomic) BOOL location_events;
@property (nonatomic, copy) NSString * _Nullable location_id;
@property (nonatomic) BOOL location_listener;
@property (nonatomic) BOOL location_permission;
@property (nonatomic) double longitude;
@property (nonatomic, copy) NSData * _Nullable metadata;
@property (nonatomic) BOOL nearby_events;
@property (nonatomic, copy) NSString * _Nullable network_state;
@property (nonatomic) BOOL network_status;
@property (nonatomic, copy) NSString * _Nullable network_type;
@property (nonatomic, copy) NSString * _Nullable os_version;
@property (nonatomic, copy) NSString * _Nullable public_ip_address;
@property (nonatomic) BOOL publish_only;
@property (nonatomic, copy) NSString * _Nullable recorded_at;
@property (nonatomic, copy) NSString * _Nullable sdk_version;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic) int32_t speed;
@property (nonatomic, copy) NSString * _Nullable system_name;
@property (nonatomic, copy) NSString * _Nullable tracking_mode;
@property (nonatomic) BOOL trips_events;
@property (nonatomic, copy) NSString * _Nullable tz_offset;
@property (nonatomic, copy) NSString * _Nullable user_id;
@property (nonatomic) double vertical_accuracy;
@property (nonatomic, copy) NSString * _Nullable wifi_ssid;
@end


SWIFT_CLASS_NAMED("CSVFilesDataModel")
@interface CSVFilesDataModel : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;

@interface CSVFilesDataModel (SWIFT_EXTENSION(RoamBatchConnector))
@property (nonatomic, copy) NSString * _Nullable filename;
@property (nonatomic, copy) NSString * _Nullable filepath;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic) int16_t locationcount;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end

@class NSNumber;
@class RoamBatchPublish;

/// The external class that provides methods to initialize and configure the RoamBatchProcessor.
SWIFT_CLASS("_TtC18RoamBatchConnector9RoamBatch")
@interface RoamBatch : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RoamBatch * _Nonnull shared;)
+ (RoamBatch * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)initialize;
/// Sets the configuration to enable or disable processing based on the provided flag.
/// \param enable A Boolean value indicating whether processing should be enabled.
///
- (void)setConfigWithEnable:(BOOL)enable syncHour:(NSNumber * _Nullable)syncHour publish:(RoamBatchPublish * _Nonnull)publish;
- (void)enableLogging;
@end


SWIFT_CLASS("_TtC18RoamBatchConnector16RoamBatchPublish")
@interface RoamBatchPublish : NSObject
@property (nonatomic) BOOL trackingMode;
@property (nonatomic) BOOL latitude;
@property (nonatomic) BOOL longitude;
@property (nonatomic) BOOL speed;
@property (nonatomic) BOOL altitude;
@property (nonatomic) BOOL course;
@property (nonatomic) BOOL horizontalAccuracy;
@property (nonatomic) BOOL verticalAccuracy;
@property (nonatomic) BOOL activity;
@property (nonatomic) BOOL appContext;
@property (nonatomic) BOOL recordedAt;
@property (nonatomic) BOOL tzOffset;
@property (nonatomic) BOOL batteryStatus;
@property (nonatomic) BOOL batteryRemaining;
@property (nonatomic) BOOL batterySaver;
@property (nonatomic) BOOL networkStatus;
@property (nonatomic) BOOL networkType;
@property (nonatomic) BOOL networkState;
@property (nonatomic) BOOL locationPermission;
@property (nonatomic) BOOL gpsStatus;
@property (nonatomic) BOOL deviceModel;
@property (nonatomic) BOOL deviceManufacturer;
@property (nonatomic) BOOL deviceName;
@property (nonatomic) BOOL kernelVersion;
@property (nonatomic) BOOL ipAddress;
@property (nonatomic) BOOL publicIpAddress;
@property (nonatomic) BOOL wifiSSID;
@property (nonatomic) BOOL localeCountry;
@property (nonatomic) BOOL localeLanguage;
@property (nonatomic) BOOL carrierName;
@property (nonatomic) BOOL appName;
@property (nonatomic) BOOL appInstallationDate;
@property (nonatomic) BOOL appVersion;
@property (nonatomic) BOOL systemName;
@property (nonatomic) BOOL centroid;
@property (nonatomic) BOOL metadata;
@property (nonatomic) BOOL sdkVersion;
@property (nonatomic) BOOL locationId;
@property (nonatomic) BOOL userId;
@property (nonatomic) BOOL appId;
@property (nonatomic) BOOL osVersion;
@property (nonatomic) BOOL idfv;
@property (nonatomic) BOOL idfa;
@property (nonatomic) BOOL source;
@property (nonatomic) BOOL bundleId;
@property (nonatomic) BOOL locationListener;
@property (nonatomic) BOOL locationAuthorizationStatus;
@property (nonatomic) BOOL nearbyEvents;
@property (nonatomic) BOOL appDetails;
@property (nonatomic) BOOL geofenceEvents;
@property (nonatomic) BOOL tripsEvents;
@property (nonatomic) BOOL locationEvents;
@property (nonatomic) BOOL publishOnly;
@property (nonatomic) BOOL eventListener;
- (void)enableAll;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
